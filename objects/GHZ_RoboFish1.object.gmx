<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprRoboFish</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Act = 0
Mode = 0
image_speed = 0.11
Hspeed = 1.3
hspeed = Hspeed
Dir = 1
Detect = 0
DetectAct = 0
Live = 1
Score = 20
if (GOD_OBJECT.BloodyHill == 1)
    sprite_index = sprRoboFishExe
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (room == GHZ_7)
{
    if (Detect == 0)
    {
        if (hspeed &gt; 0)
        {
            if collision_rectangle((bbox_right - 5), bbox_top, (bbox_right + 25), bbox_bottom, Solid_Mask, 0, 0)
            {
                hspeed = (-Hspeed)
                image_xscale = -1
                Dir = -1
            }
        }
        if (hspeed &lt; 0)
        {
            if collision_rectangle((bbox_left + 5), bbox_top, (bbox_left - 25), bbox_bottom, Solid_Mask, 0, 0)
            {
                hspeed = Hspeed
                image_xscale = 1
                Dir = 1
            }
        }
    }
    if (Detect == 1)
    {
        if (hspeed &gt; 0)
        {
            if collision_rectangle((bbox_right - 5), bbox_top, (bbox_right + 25), bbox_bottom, Solid_Mask, 0, 0)
            {
                hspeed = (-Hspeed) * 2
                image_xscale = -1
                Dir = -1
            }
        }
        if (hspeed &lt; 0)
        {
            if collision_rectangle((bbox_left + 5), bbox_top, (bbox_left - 25), bbox_bottom, Solid_Mask, 0, 0)
            {
                hspeed = Hspeed * 2
                image_xscale = 1
                Dir = 1
            }
        }
    }
    if instance_exists(Pers_Obj)
    {
        if (image_xscale == 1)
        {
            if collision_rectangle((bbox_left - 15), bbox_top, (bbox_right + 65), bbox_bottom, Pers_Obj, 0, 0)
            {
                Detect = 1
                DetectAct = 1
            }
        }
        if (image_xscale == -1)
        {
            if collision_rectangle((bbox_left - 65), bbox_top, (bbox_right + 15), bbox_bottom, Pers_Obj, 0, 0)
            {
                Detect = 1
                DetectAct = 1
            }
        }
        if (((image_xscale == 1) &amp;&amp; (!(collision_rectangle((bbox_left - 15), bbox_top, (bbox_right + 65), bbox_bottom, Pers_Obj, 0, 0)))) || ((image_xscale == -1) &amp;&amp; (!(collision_rectangle((bbox_left - 65), bbox_top, (bbox_right + 15), bbox_bottom, Pers_Obj, 0, 0)))))
            Detect = 0
    }
    if (Detect == 1)
    {
        hspeed = image_xscale * (Hspeed * 3.5)
        image_speed = 0.16
    }
    if ((Detect == 0) &amp;&amp; (DetectAct == 1))
    {
        DetectAct = 0
        image_speed = 0.11
        if (Dir == 1)
            hspeed = Hspeed
        if (Dir == -1)
            hspeed = (-Hspeed)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" enumb="35">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (((Pers_Obj.sprite_index == sprTails_Jump) || (Pers_Obj.sprite_index == sprTails_Spindash)) || (((Pers_Obj.sprite_index == sprTails_Fly) || (Pers_Obj.sprite_index == sprTails_FlyScary)) &amp;&amp; (place_meeting(x, bbox_bottom, Pers_Obj))))
{
    instance_create(x, y, Exploy)
    instance_create(x, y, BigBubble)
    audio_play_sound(SFX_BoxBroke, 0, false)
    global.Score += Score
    instance_destroy()
    if ((Pers_Obj.sprite_index == sprTails_Jump) &amp;&amp; (Pers_Obj.vspeed &gt; 0))
    {
        if keyboard_check(ord("Z"))
        {
            if (Pers_Obj.vspeed &gt; 4)
                Pers_Obj.vspeed = (-Pers_Obj.vspeed)
            else
                Pers_Obj.vspeed = -4
        }
        else
            Pers_Obj.vspeed = -4
    }
}
if ((Pers_Obj.canHit == 1) &amp;&amp; ((GOD_OBJECT.Ball_Form == 0) &amp;&amp; ((Pers_Obj.sprite_index != sprTails_Fly) || ((Pers_Obj.sprite_index == sprTails_Fly) &amp;&amp; (!(place_meeting(x, bbox_bottom, Pers_Obj)))))))
{
    if (global.Immortality == 0)
        GetHit()
    if (global.Immortality == 1)
        GetHitWeak()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.1</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.1</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.1</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.2</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <points>-16,-15</points>
    <points>16,16</points>
  </PhysicsShapePoints>
</object>
